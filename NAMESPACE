# Generated by roxygen2: do not edit by hand

S3method(chacha,dance_grouped_df)
S3method(chacha,data.frame)
S3method(chacha,grouped_df)
S3method(print,choreography)
export("%<-%")
export("%>%")
export(and)
export(bachata)
export(ballet)
export(bolero)
export(chacha)
export(charleston)
export(choreography)
export(contains)
export(ends_with)
export(everything)
export(foxtrot)
export(group_by)
export(group_cols)
export(jive)
export(last_col)
export(madison)
export(mambo)
export(matches)
export(num_range)
export(one_of)
export(or)
export(polka)
export(rumba)
export(salsa)
export(samba)
export(starts_with)
export(swing)
export(tango)
export(tibble)
export(twist)
export(waltz)
export(zumba)
import(dplyr)
import(rlang)
import(tidyselect)
import(vctrs)
importFrom(Rcpp,sourceCpp)
importFrom(assertthat,assert_that)
importFrom(crayon,green)
importFrom(crayon,red)
importFrom(crayon,silver)
importFrom(glue,glue)
importFrom(glue,glue_collapse)
importFrom(magrittr,and)
importFrom(magrittr,or)
importFrom(purrr,as_mapper)
importFrom(purrr,map)
importFrom(purrr,map2)
importFrom(purrr,map2_int)
importFrom(purrr,map_chr)
importFrom(purrr,map_dbl)
importFrom(purrr,map_dfr)
importFrom(purrr,map_if)
importFrom(purrr,map_int)
importFrom(purrr,map_lgl)
importFrom(purrr,map_raw)
importFrom(purrr,reduce)
importFrom(purrr,transpose)
importFrom(purrr,walk)
importFrom(purrr,walk2)
importFrom(tibble,as_tibble)
importFrom(tibble,tibble)
importFrom(utils,head)
useDynLib(dance, .registration = TRUE)
